## This file is used by NFC Hardware Abstraction Layer at external/libnfc-nci/halimpl/

###############################################################################
# Application logging mask
#
# Sets the minimum level an ALOG? event must have to
# be logged. It doesn't work all that well as it seems
# the broadcom code only checks to see this value
# is >= LEVEL_DEBUG
#
# LEVEL_NONE    0       No trace messages generated
# LEVEL_ERROR   1       Error trace messages generated
# LEVEL_WARNING 2       Warning trace messages generated
# LEVEL_API     3       API traces are generated
# LEVEL_EVENT   4       Debug messages (events)
# LEVEL_DEBUG   5       Debug messages (general)
#
# Note: This can be overriden by the system property nfc.app_log_level
#
# Note2: This value is set at initialization time. If you change it
#        you'll have to kill the current com.android.nfc process
#
# Note3: Setting this to 0xFF causes the code to use a hard coded
#        value set at compile time, currently LEVEL_DEBUG.
#
# Note4: If this value is < LEVEL_DEBUG then the raw format will
#        be used for NCI/Protocol tracing.
#
###############################################################################
APPL_TRACE_LEVEL=0x03
VERBOSE_APPL_TRACE_LEVEL=0x05

###############################################################################
# Protocol/NCI Decoder Mask
#
# Enables or disables various kinds of information output for
# Protocol/NCI packets.
#
# Most of these only impact output when doing decoding of NCI/HCI
# packets but not all.
#
# 0x00000001    HCI Summary (impacts both raw and decoded)
# 0x00000002    HCI Data
# 0x00000800    HCI Vendor Specific Events
# 0x00004000    HCP and NCI commands (impacts both raw and decoded)
# 0x00008000    LLCP PDUs
# 0x00010000    NDEF (Unused)
# 0x00020000    RW
# 0x00040000    CE
# 0x00080000    SNEP PDU
# 0x00100000    CHO PDU
# 0x80000000    USERIAL Verbose Debugging (Unused)
#
# Anything not listed is currently unused.
#
###############################################################################
PROTOCOL_TRACE_LEVEL=0
VERBOSE_PROTOCOL_TRACE_LEVEL=0x801fffff

###############################################################################
# Output raw NCI packets
#
# Setting a value of 1 forces NCI traces to output raw bytes
# Any other value (or if this property isn't set) leaves the
# default behaviour set which is currently to output decoded
# NCI packets.
#
# Note: This value is ignored and raw traces are enabled if APPL_TRACE_LEVEL
#       is not set to LEVEL_DEBUG
###############################################################################
USE_RAW_NCI_TRACE=0

#LOG_TO_FILE="/data/nfc/log.txt"
#LOGCAT_FILTER="USERIAL_LINUX,GKI_DEBUG,GKI_LINUX,bb-nfc-hal,bb-nfc-nci-hal,NfcNciHal,NfcHal,NfcDt,NFC-NCI,NfcAdapt,NfcAdaptation,NfcNfa,NfcJni,BrcmNci,BrcmNfcNfa,BrcmHcpR,BrcmHcpX,BrcmLlcpR,BrcmLlcpX,BrcmHciR,BrcmHciX,BrcmNciR,BrcmNciX,NFCA_API,NFCA_MESSAGE,NFCA_WORK,NFCA_NFA,NFCA_NFA_ADAPTER,NFCA_NFA_DM,NFCA_NFA_API,BrcmNfcJni,NfcService,SimCardEventReceiver,DEBUG"

###############################################################################
# Transport driver
###############################################################################
TRANSPORT_DRIVER="/dev/bcm2079x"

###############################################################################
# Power control
###############################################################################
POWER_CONTROL_DRIVER="/dev/bcm2079x"
POWER_ON_DELAY=300
PRE_POWER_OFF_DELAY=10
#POST_POWER_OFF_DELAY=10
CE3_PRE_POWER_OFF_DELAY=1500
#NFA_DM_ENABLE_SLEEP=1
NFC_WAKE_DELAY=20
SCREEN_OFF_POWER_STATE=3

###############################################################################
# NFCC I2C slave address
###############################################################################
#BCMI2CNFC_ADDRESS=0x76

###############################################################################
# Location used for storing persistent data
#
# If not set, defaults to "/data/nfc" in the code.
#
# Setting this to use the application's private data store
#
# Used for the following files at least
# NFA_STORAGE/nfaStorage.bin?
# NFA_STORAGE/halStorage.bin?
#  (where ? is a number indicating what 'block')
# NFA_STORAGE/param/hce-route.xml               (RouteDataSet.cpp)
# NFA_STORAGE/param/config.xml                  (ConfigDataSet.cpp)
# NFA_STORAGE/param/secElemInfoStore.bin        (SecElemInfoStore.cpp)
###############################################################################
NFA_STORAGE="/data/data/com.android.nfc/files"

###############################################################################
# Should preserved data be deleted on startup
#
# If set to 1 the nfaStorage.bin? and halStorage.bin? files are not
# deleted on startup. Any other value, or if the setting is not present
# causes those files to be deleted.
###############################################################################
PRESERVE_STORAGE=1

###############################################################################
# NFCC enable control
# This is the waiting period between NFCC_ENABLE and BUILD_INFO. If the time is
# too short and NFCC is not ready yet, sending BUILD_INFO command to NFCC will
# get command rejected response.
###############################################################################
NFCC_ENABLE_TIMEOUT=2000

###############################################################################
# NFCC operation control
###############################################################################
NFC_WRITE_DELAY=20
#REPORT_PERFORMANCE_MEASURE=0
#READ_MULTIPLE_PACKETS=0

###############################################################################
# Maximum supported EE
###############################################################################
#NFA_MAX_EE_SUPPORTED=1

###############################################################################
# SE config
###############################################################################
#REGISTER_VIRTUAL_SE=0
AID_FOR_EMPTY_SELECT={08:A0:00:00:01:51:00:00:00}
ENABLE_AID_FILTERING=1

###############################################################################
# Select controller support for AID matching
# the default value is 0.
# 0  Exact matching only
# 1  Exact+Prefix matching
# 2  Prefix matching only
###############################################################################
AID_MATCHING_MODE=2

###############################################################################
# Maximum Number of Credits to be allowed by the NFCC
###############################################################################
MAX_RF_DATA_CREDITS=1

###############################################################################
# NFC polling control
###############################################################################
#NFC_SCREEN_OFF_POLL_ON=1
NFA_DM_DISC_DURATION_POLL=500
#POLL_FREQUENCY={01:01:01:01:01:01:01:01}

###############################################################################
# Force tag polling for the following technology(s).
# The bits are defined as tNFA_TECHNOLOGY_MASK in nfa_api.h.
# Default is NFA_TECHNOLOGY_MASK_A | NFA_TECHNOLOGY_MASK_B |
#            NFA_TECHNOLOGY_MASK_F | NFA_TECHNOLOGY_MASK_ISO15693 |
#            NFA_TECHNOLOGY_MASK_B_PRIME | NFA_TECHNOLOGY_MASK_A_ACTIVE |
#            NFA_TECHNOLOGY_MASK_F_ACTIVE.
#
# 0x01- A, 0x02- B, 0x04- F, , 0x08- 15693, 0x20- Kovio
###############################################################################
POLLING_TECH_MASK=0xEF

#####################################################################################
# Listen to the following technology(s).
# The bits are defined as tNFA_TECHNOLOGY_MASK in nfa_api.h.
# Default is NFA_TECHNOLOGY_MASK_A | NFA_TECHNOLOGY_MASK_B.
#
# NOTE: THESE DON'T SEEM TO BE USED IN AOSP
#
# NOTE: Broadcom suggests they be commented out as this will cause
#       the listen tech mask to be configured to whatever the UICC
#       supports when it is discovered
#
###############################################################################
#UICC_LISTEN_TECH_MASK=0x07
#UICC_LISTEN_TECH_EXCLUDE_MASK=0x10

###############################################################################
# Force P2P to only listen for the following technology(s).
# The bits are defined as tNFA_TECHNOLOGY_MASK in nfa_api.h.
# Default is NFA_TECHNOLOGY_MASK_A | NFA_TECHNOLOGY_MASK_F |
#            NFA_TECHNOLOGY_MASK_A_ACTIVE | NFA_TECHNOLOGY_MASK_F_ACTIVE
#
# 0x01 - A
# 0x04 - F
# 0x40 - Active A
# 0x80 - Active F
###############################################################################
P2P_LISTEN_TECH_MASK=0xC5

###############################################################################
# Configure the default NfcA/IsoDep techology and protocol route. Can be
# either a secure element (e.g. 0xF3) or the host (0x00)
#
# If HOST (0x00) this value sets both Nfc-A technology and ISODEP protocol
# routing. If non-HOST it only sets the ISODEP protocol routing (Nfc-A tech
# routing is covered by ACTIVE_SE in this case).
###############################################################################
DEFAULT_ISODEP_ROUTE=0xF3

###############################################################################
# Configure the default "off-host" AID route.  The default is 0xF4
# Any AID that is registered with the system that has an off host destination
# is routed to the EE specified here.
###############################################################################
DEFAULT_OFFHOST_ROUTE=0xF3

###############################################################################
# Set the activeSE. This must be non-zero for the code to actually check
# what EEs are on the device. If one of those EEs' handle matches this
# value AND supports Nfc-A then that technology's default route is
# set to the EE
###############################################################################
ACTIVE_SE=0xF3

###############################################################################
TRANSPORT_PREFIX=1

###############################################################################
# Configure Card Emulation ISODEP listen mode.
# 0: Disable special handling and use AOSP behavior.
# 1: Use traditional Type-B Only workaround to disable. Type A listen only when
#    an off-host payment app is default.
# 2: Configure the mask based on the existence and technologies supported on
#    the installed UICC.
###############################################################################
CE_ISODEP_LISTEN_MODE=2
